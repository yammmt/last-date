name: Rust

on: [push, pull_request]

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install SQLite (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install libsqlite3-dev
    - name: Install SQLite (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install sqlite
        cd /D C:\ProgramData\chocolatey\lib\SQLite\tools
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        lib /machine:x64 /def:sqlite3.def /out:sqlite3.lib
        echo ::add-path::C:\ProgramData\chocolatey\lib\SQLite\tools
        echo ::set-env name=SQLITE3_LIB_DIR::C:\ProgramData\chocolatey\lib\SQLite\tools
        echo ::set-env name=SQLITE_DATABASE_URL::C:\test.db
    - name: Use nightly
      run: rustup default nightly
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  clippy_check:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install SQLite
      run: |
        sudo apt-get update
        sudo apt-get install libsqlite3-dev
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          components: clippy
          override: true
    - uses: actions-rs/clippy-check@v1
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
